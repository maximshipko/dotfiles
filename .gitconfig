[alias]
	c = commit -am
	fpush = push --force
	pushf = push --force-with-lease
	s = status
	sclone = clone --depth=1
	amend = commit --amend --all
	undocommit = reset HEAD~
	hreset = reset --hard
	co = checkout
	df = diff --color --color-words --abbrev
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --

	# show commit log of unique commits of this branch (not on master)
	diffcommitsfrommaster = log --no-merges master..
	# show unified diff of unique commits of this branch
	difffrommaster = diff master...
	# ^^^^ Holy crap two dots vs three dots, so important. https://stackoverflow.com/a/48681527

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	reup = rebase-update # depot_tools specific
	git = !exec git

[core]
	editor = vim
	excludesfile = ~/.gitignore # global ignors
	attributesfile = ~/.gitattributes
	precomposeUnicode = true # useful when sharing a repository between Mac OS and Linux or Windows

[pager]
	# insanely beautiful diffs ==> npm install -g diff-so-fancy
	diff = diff-so-fancy | less --tabs=4 -RFX
	show = diff-so-fancy | less --tabs=4 -RFX

[interactive]
	diffFilter = "diff-so-fancy"

# so much color
[color]
	ui = auto
[color "diff"]
	meta = yellow 
	commit = green 
	frag = magenta 
	old = red 
	new = green 
	whitespace = red reverse
    newMoved = cyan
    oldMoved = blue
[color "diff-highlight"]
	oldNormal = red
	oldHighlight = "red bold 52"
	newNormal = "green bold"
	newHighlight = "green bold 22"
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

# git mergetool
[merge]
	tool = opendiff
	renameLimit = 0


	
[url "git://gist.github.com/"]
	insteadOf = "gist:"

# correct typos
[help]
	autocorrect = 1

# push easily. http://stackoverflow.com/a/23918418/89484
[push]
	default = current
	followTags = true

#[init]
#	templatedir = ~/.git_template

[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true

[fetch]
#	prune = true # fetching/pulling will also remove any remote-tracking references that no longer exist on the remote

[diff]
    colorMoved = zebra

[stash]
	showPatch = true
	
[log]
	date = relative

# use separate file for username / github token / etc
# For example:
#   git config -f ~/.gitconfig.local user.email "your@email.com"
#   git config -f ~/.gitconfig.local user.name "Name Lastname"
[include]
  path = ~/.gitconfig.local
